{
    "Robot": {
        "components": [
            {
                "PersistentError": {
                    "states": [
                        "No",
                        "Yes"
                    ],
                    "variables": [],
                    "init": {
                        "string": "PersistentError == No",
                        "type": "pl"
                    },
                    "transitions": [
                        {
                            "No -> No": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        },
                        {
                            "No -> Yes": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        }
                    ]
                }
            },
            {
                "TransientError": {
                    "states": [
                        "No",
                        "Yes"
                    ],
                    "variables": [],
                    "init": {
                        "string": "TransientError == No",
                        "type": "pl"
                    },
                    "transitions": [
                        {
                            "No -> No": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        },
                        {
                            "No -> Yes": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        },
                        {
                            "Yes -> No": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        },
                        {
                            "Yes -> Yes": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        }
                    ]
                }
            },
            {
                "LightBarrier": {
                    "states": [
                        "Signal",
                        "Idle"
                    ],
                    "variables": [],
                    "init": {
                        "string": "LightBarrier == Idle",
                        "type": "pl"
                    },
                    "transitions": [
                        {
                            "Signal -> Signal": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        },
                        {
                            "Signal -> Idle": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        },
                        {
                            "Idle -> Signal": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        },
                        {
                            "Idle -> Idle": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        }
                    ]
                }
            },
            {
                "Robot": {
                    "states": [
                        "Inactive",
                        "Busy",
                        "Idle"
                    ],
                    "variables": [
                        {
                            "num": {
                                "range": "0..7",
                                "init": null
                            }
                        }
                    ],
                    "init": {
                        "string": "(Robot == Idle && num == 0)",
                        "type": "pl"
                    },
                    "transitions": [
                        {
                            "Busy -> Inactive": {
                                "precon": null,
                                "guard": {
                                    "string": "num == 3",
                                    "type": "pl"
                                },
                                "action": null
                            }
                        },
                        {
                            "Busy -> Busy": {
                                "precon": null,
                                "guard": null,
                                "action": null
                            }
                        },
                        {
                            "Busy -> Idle": {
                                "precon": null,
                                "guard": {
                                    "string": "num < 3",
                                    "type": "pl"
                                },
                                "action": null
                            }
                        },
                        {
                            "Idle -> Busy": {
                                "precon": {
                                    "string": "(num + 1) >= 0 && (num + 1) <= 7",
                                    "type": "pl"
                                },
                                "guard": {
                                    "string": "LightBarrier == Signal",
                                    "type": "pl"
                                },
                                "action": {
                                    "string": "num := (num + 1)",
                                    "type": "action"
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "hazards": [
            {
                "label": "Hazard 2",
                "expression": "(AF TransientError == Yes && EF PersistentError == Yes)"
            },
            {
                "label": "Hazard 1",
                "expression": "F Robot == Inactive"
            }
        ],
        "specification": [
            {
                "label": "Specification 2",
                "expression": {
                    "string": "G TransientError == No",
                    "type": "pl"
                }
            },
            {
                "label": "Specification 1",
                "expression": {
                    "string": "(X Robot == Idle || F Robot == Busy)",
                    "type": "pl"
                }
            }
        ]
    }
}